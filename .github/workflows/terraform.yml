name: "Vprofile IAC"
on: # events to trigger workflow
  push: # push trigger
    branches: # branches listed can trigger workflow with a push
      - main
      - stage
    paths: # triggers with commits from this path
      - terraform/** 
  pull_request: # workflow triggered on the following pull requests (branch/paths)
    branches:
      - main
    paths:
      - terraform/**

env:
  #AWS deployment credentials
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #s3 bucket for terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Apply terraform code changes" # name of job
    runs-on: ubuntu-latest # select a runner (container) on github actions. different kinds e.g. ubuntu, macos, windows. this runner is commonly used and includes prebuilt packages
    defaults: # defaults to use for runner
      run:
        shell: bash
        working-directory: ./terraform
    
    steps: #steps for the workflow
      - name: Checkout source code
        uses: actions/checkout@v4
    
      - name: Setup terrsform with specific runner version
        uses: hashicorp/setup-terraform@v3
        #with:
        #  terraform_version: "1.1.7"

      - name: Terrform init #initalises terraform
        id: init #can be referenced by the other tasks
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format #checks correct format for tf files
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate #checks syntax etc of tf code
        id: validate
        run: terraform validate

      - name: Terraform plan 
        id: plan
        run: terraform plan -no-color -input=false -out planfile #info stored in planfile
        continue-on-error: true #fail check in next step

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1 #kills container

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
     
      - name: Get Kube config file
        id: getconfig
        if: steps.apply.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }} 

      - name: Install Ingress controller
        if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
      



